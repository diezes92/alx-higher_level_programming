The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Importing function from the module:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[5, 2, 8], [6, 9, 6]], 3)
[[1.67, 0.67, 2.67], [2.0, 3.0, 2.0]]
>>> matrix_divided([[5, 2, 8], [6, 9, 6]], 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 35, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix_divided([[5, 2, 8], [6, 9, 6]], 4.2)
[[1.19, 0.48, 1.9], [1.43, 2.14, 1.43]]
>>> matrix_divided([], 6)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 40, in matrix_divided
    raise TypeError(msgt)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided((8, 9, 9), 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 40, in matrix_divided
    raise TypeError(msgt)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[10, 52], [7, -2.9, -5.8, 8], [-9]], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 50, in matrix_divided
    raise TypeError(msgs)
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[7, 6], [52], [1, 2]], 6)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 50, in matrix_divided
    raise TypeError(msgs)
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([["higher", "alx"], ["test", "check"]], 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 54, in matrix_divided
    raise TypeError(msgt)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([["6"], ["8", "5"], ["8", "5"]], 23)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 54, in matrix_divided
    raise TypeError(msgt)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[7, 8], ['8.2'], [8, '3'], [4, '8', ]], 7)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 50, in matrix_divided
    raise TypeError(msgs)
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[2.5, 3], ['2', 5.8], [2.5, '9'], [7, '8', 5.2]], 9)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 54, in matrix_divided
    raise TypeError(msgt)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 5], [], [8, 6]], 12)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 47, in matrix_divided
    raise TypeError(msgt)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[3, -2], (4, -6), [4, 5]], 6)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 47, in matrix_divided
    raise TypeError(msgt)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[5, 7], [58, 5]], [68])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 32, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_divided([[35, 40], [40, 30]], "25")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 32, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_divided([[-1, 3.1, 0], [78, -103.7, 54]], 9.2)
[[-0.11, 0.34, 0.0], [8.48, -11.27, 5.87]]
