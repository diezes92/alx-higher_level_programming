The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

Importing function from the module:
>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1,2)
3
>>> add_integer(100,-2)
98
>>> add_integer(2)
100
>>> add_integer(4,"School")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/0-add_integer.py", line 20, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/0-add_integer.py", line 17, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer("Test","School")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/0-add_integer.py", line 17, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer('7','5')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/0-add_integer.py", line 17, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(7,'5')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/0-add_integer.py", line 20, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
